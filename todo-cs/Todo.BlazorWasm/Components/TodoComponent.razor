@using Todo.Domain
<div class="checkbox-wrapper add-task @RemoveAnimation">
    <div class="task-container" @onclick="CheckTask">
        <input type="checkbox" @bind="TodoItem.IsComplete">
        <label>
            <div class="tick-mark"></div>
        </label>
        <span class="task-title @StrikeoutClass">@TodoItem.Name</span>
    </div>
    <div class="icon-container">
        <i class="las la-times" @onclick="RemoveTodo"></i>
    </div>
</div>

@code {
    [Parameter]
    public TodoItem TodoItem {get; set;} = new();
    [Parameter]
    public EventCallback<TodoItem> OnRemoveTodo{get; set;}
    [Parameter]
    public EventCallback OnCheckTodo {get; set;}
    [Parameter]
    public string RemoveAnimation {get; set;} = string.Empty;
    private string StrikeoutClass => TodoItem.IsComplete ? "strikeout-gradient" : "";
    

    private void CheckTask() {
        this.TodoItem.IsComplete = !this.TodoItem.IsComplete;
        OnCheckTodo.InvokeAsync();
    }

    private async Task RemoveTodo() {
        this.RemoveAnimation = "remove-task";
        await Task.Delay(300);
        await OnRemoveTodo.InvokeAsync(this.TodoItem);
    }
}